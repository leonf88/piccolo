package asyncgraph;

enum MessageTypes {
  MTYPE_KERNEL_UPDATE = 1;
  MTYPE_MASTER_UPDATE = 2;
  MTYPE_WORKER_EXIT = 3;
};

message Pair {
  required bytes key = 1;
  required bytes value = 2;
}


message ConfigData {
  required bytes shard_prefix = 1;
  required int32 num_shards = 2;
  
  required int32 num_workers = 3;
  required int32 worker_id = 4;
  required int32 master_id = 9;
  required bytes kernel = 5;
  required int32 graph_size = 6;
  
  optional bool localtest = 7 [default = false];
  optional int32 network_buffer = 8 [default = 20000000];
}

message KernelStatus {
  optional double divergence = 1 [default=-1];
  repeated Pair extra = 5;
};

message WorkerStatus {
  required int64 bytes_out = 1;
  required int64 bytes_in = 2;
  required int32 current_iteration = 3;

  required KernelStatus kernel_status = 4;
}

message UpdateRequest {
  repeated Pair update = 1;
  required int32 source = 2;
  
  // The kernel iteration which generated these values.
  required int32 iteration = 3;
  
  // Is this the last update packet for me?
  required bool done = 4;
}

message EmptyMessage {}

//shortest-path.cc
message PathNode {
  required int32 id = 1;
  repeated int32 target = 2;
  required int32 distance = 3 [default = 0];
  required bool dirty = 4 [default = false];
}

//pagerank.cc
message PagerankNode {
  required int32 id = 1;
  repeated int32 target = 2;
}
